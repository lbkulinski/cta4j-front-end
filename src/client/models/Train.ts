/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
/**
 * Represents a train and its schedule information.
 * @export
 * @interface Train
 */
export interface Train {
    /**
     * The unique run number of the train.
     * @type {number}
     * @memberof Train
     */
    run: number;
    /**
     * Represents the different transit lines in the system.
     * @type {string}
     * @memberof Train
     */
    line: TrainLineEnum;
    /**
     * The final destination of the train.
     * @type {string}
     * @memberof Train
     */
    destination: string;
    /**
     * The station where the train will next arrive.
     * @type {string}
     * @memberof Train
     */
    station: string;
    /**
     * The time when the arrival prediction was made.
     * @type {Date}
     * @memberof Train
     */
    predictionTime: Date;
    /**
     * The estimated arrival time of the train at the station.
     * @type {Date}
     * @memberof Train
     */
    arrivalTime: Date;
    /**
     * Indicates whether the train is due to arrive soon.
     * @type {boolean}
     * @memberof Train
     */
    due: boolean;
    /**
     * Indicates whether the train is arriving according to its schedule.
     * @type {boolean}
     * @memberof Train
     */
    scheduled: boolean;
    /**
     * Indicates whether the train is delayed.
     * @type {boolean}
     * @memberof Train
     */
    delayed: boolean;
}


/**
 * @export
 */
export const TrainLineEnum = {
    Red: 'RED',
    Blue: 'BLUE',
    Brown: 'BROWN',
    Green: 'GREEN',
    Orange: 'ORANGE',
    Purple: 'PURPLE',
    Pink: 'PINK',
    Yellow: 'YELLOW',
    NA: 'N_A'
} as const;
export type TrainLineEnum = typeof TrainLineEnum[keyof typeof TrainLineEnum];


/**
 * Check if a given object implements the Train interface.
 */
export function instanceOfTrain(value: object): value is Train {
    if (!('run' in value) || value['run'] === undefined) return false;
    if (!('line' in value) || value['line'] === undefined) return false;
    if (!('destination' in value) || value['destination'] === undefined) return false;
    if (!('station' in value) || value['station'] === undefined) return false;
    if (!('predictionTime' in value) || value['predictionTime'] === undefined) return false;
    if (!('arrivalTime' in value) || value['arrivalTime'] === undefined) return false;
    if (!('due' in value) || value['due'] === undefined) return false;
    if (!('scheduled' in value) || value['scheduled'] === undefined) return false;
    if (!('delayed' in value) || value['delayed'] === undefined) return false;
    return true;
}

export function TrainFromJSON(json: any): Train {
    return TrainFromJSONTyped(json, false);
}

export function TrainFromJSONTyped(json: any, ignoreDiscriminator: boolean): Train {
    if (json == null) {
        return json;
    }
    return {
        
        'run': json['run'],
        'line': json['line'],
        'destination': json['destination'],
        'station': json['station'],
        'predictionTime': (new Date(json['predictionTime'])),
        'arrivalTime': (new Date(json['arrivalTime'])),
        'due': json['due'],
        'scheduled': json['scheduled'],
        'delayed': json['delayed'],
    };
}

  export function TrainToJSON(json: any): Train {
      return TrainToJSONTyped(json, false);
  }

  export function TrainToJSONTyped(value?: Train | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'run': value['run'],
        'line': value['line'],
        'destination': value['destination'],
        'station': value['station'],
        'predictionTime': ((value['predictionTime']).toISOString()),
        'arrivalTime': ((value['arrivalTime']).toISOString()),
        'due': value['due'],
        'scheduled': value['scheduled'],
        'delayed': value['delayed'],
    };
}

